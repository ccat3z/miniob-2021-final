# This Dockerfile is just for testing if it can be built in the competition's test environment
FROM gcc:8.3

RUN apt-get update && apt-get install cmake -y \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies
ENV MAKEFLAGS=-j8
WORKDIR /usr/src
# RUN git clone https://gitlab.kitware.com/cmake/cmake.git --branch v3.20.6 --depth 1 \
#     && cd cmake \
#     && ./bootstrap && make install \
#     && cd /usr/src && rm -rf cmake
RUN git clone https://github.com/libevent/libevent --branch release-2.1.12-stable --depth 1 \
    && cd libevent \
    && mkdir build \
    && cd build \
    && cmake .. -DEVENT__DISABLE_OPENSSL=ON \
    && make install \
    && cd /usr/src && rm -rf libevent
RUN git clone https://github.com/open-source-parsers/jsoncpp.git --depth 1 \
    && cd jsoncpp \
    && mkdir build \
    && cd build \
    && cmake -DJSONCPP_WITH_TESTS=OFF -DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF .. \
    && make install \
    && cd /usr/src && rm -rf jsoncpp
RUN git clone https://github.com/google/googletest --depth 1 \
    && cd googletest \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make install \
    && cd /usr/src && rm -rf googletest
RUN wget http://ftp.gnu.org/gnu/bison/bison-3.7.tar.gz \
    && tar xzvf bison-3.7.tar.gz \
    && cd bison-3.7 \
    && ./configure \
    && make install \
    && cd /usr/src && rm -rf bison-3.7
ENV LD_LIBRARY_PATH=/usr/local/lib

# Dev tools
RUN apt-get update && apt-get install bash-completion gdb -y \
    && rm -rf /var/lib/apt/lists/*
RUN echo ". /etc/bash_completion" >> /etc/bash.bashrc
RUN rm -rf /root/.gnupg